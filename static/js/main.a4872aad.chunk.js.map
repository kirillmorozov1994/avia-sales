{"version":3,"sources":["components/spinner/spinner.js","components/spinner/index.js","store/initial-state.js","store/utils-func.js","store/index.js","index.js"],"names":["Spinner","className","initialState","field","label","check","stop","checkFilter","array","checked","checkedOther","every","map","filter","sortPriceOrTimeTickets","type","slice","sort","prevTicket","nextTicket","price","sortPriceTickets","segments","duration","sortFastTimeTickets","configure","enforceActions","Store","filterTransfer","loading","error","searchId","tickets","isFastOrCheap","perPage","page","totalTickets","setChangeFilterTransfer","name","checkedAll","find","forEach","setSelectedFilterTransfer","setChangeFilterPrice","setSearchId","id","setTickets","length","setClearState","setChangeLoading","bool","setChangeError","setTotalTickets","total","setPage","request","initial","a","requestSearchId","requestTickets","fetch","resId","status","Error","json","bodyId","resTickets","bodyTickets","requestInitialData","requestNextData","this","checkedTransfer","filterTicketsTransfer","includes","stops","filtersTickets","store","decorate","observable","computed","visibleTickets","hasMore","action","bound","App","lazy","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.a4872aad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className=\"spinner-wrap\">\r\n\t\t\t<div className=\"spinner\">\r\n\t\t\t\t<div className=\"dot1\" />\r\n\t\t\t\t<div className=\"dot2\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner\r\n","import Spinner from './spinner'\r\n\r\nexport default Spinner\r\n","const initialState = {\r\n\tfilterTransfer: [\r\n\t\t{\r\n\t\t\tfield: 'Все',\r\n\t\t\tlabel: 'all',\r\n\t\t\tcheck: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: 'Без бересадок',\r\n\t\t\tlabel: 'noStop',\r\n\t\t\tcheck: true,\r\n\t\t\tstop: 0,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: '1 бересадка',\r\n\t\t\tlabel: 'oneStop',\r\n\t\t\tcheck: true,\r\n\t\t\tstop: 1,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: '2 бересадки',\r\n\t\t\tlabel: 'twoStop',\r\n\t\t\tcheck: true,\r\n\t\t\tstop: 2,\r\n\t\t},\r\n\t\t{\r\n\t\t\tfield: '3 бересадки',\r\n\t\t\tlabel: 'threeStop',\r\n\t\t\tcheck: true,\r\n\t\t\tstop: 3,\r\n\t\t},\r\n\t],\r\n\tisFastOrCheap: true,\r\n\tloading: true,\r\n\terror: null,\r\n\tsearchId: null,\r\n\ttickets: null,\r\n\ttotalTickets: null,\r\n\tperPage: 5,\r\n\tpage: 1,\r\n}\r\n\r\nexport { initialState }\r\n","const checkFilter = (array, checked) => {\r\n\tconst checkedOther = array.every(({ label, check }) => {\r\n\t\tif (label === 'all') return true\r\n\t\treturn check\r\n\t})\r\n\tif (!checked) {\r\n\t\tif (checkedOther) {\r\n\t\t\treturn array.map((filter) => ({ ...filter, check: checkedOther }))\r\n\t\t}\r\n\t}\r\n\tif (checked) {\r\n\t\tif (!checkedOther) {\r\n\t\t\treturn array.map((filter) => {\r\n\t\t\t\tif (filter.label === 'all') return { ...filter, check: checkedOther }\r\n\t\t\t\treturn filter\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\treturn array\r\n}\r\n\r\nconst sortPriceTickets = (array) => {\r\n\treturn array.slice().sort((prevTicket, nextTicket) => prevTicket.price - nextTicket.price)\r\n}\r\n\r\nconst sortFastTimeTickets = (array) => {\r\n\treturn array.slice().sort((prevTicket, nextTicket) => {\r\n\t\tconst { duration: prevDuration1 } = prevTicket.segments[0]\r\n\t\tconst { duration: prevDuration2 } = prevTicket.segments[1]\r\n\t\tconst { duration: nextDuration1 } = nextTicket.segments[0]\r\n\t\tconst { duration: nextDuration2 } = nextTicket.segments[1]\r\n\t\treturn prevDuration1 + prevDuration2 - nextDuration1 - nextDuration2\r\n\t})\r\n}\r\n\r\nconst sortPriceOrTimeTickets = (array, type) => {\r\n\tif (type === 'price') {\r\n\t\treturn sortPriceTickets(array)\r\n\t}\r\n\tif (type === 'duration') {\r\n\t\treturn sortFastTimeTickets(array)\r\n\t}\r\n}\r\n\r\nexport { checkFilter, sortPriceOrTimeTickets }\r\n","import { decorate, observable, action, configure, computed } from 'mobx'\r\nimport 'mobx-react-lite/batchingForReactDom'\r\nimport { initialState } from './initial-state'\r\nimport { checkFilter, sortPriceOrTimeTickets } from './utils-func'\r\nconfigure({ enforceActions: 'observed' })\r\n\r\nclass Store {\r\n\tfilterTransfer = initialState.filterTransfer\r\n\tloading = initialState.loading\r\n\terror = initialState.error\r\n\tsearchId = initialState.searchId\r\n\ttickets = initialState.tickets\r\n\tisFastOrCheap = initialState.isFastOrCheap\r\n\tperPage = initialState.perPage\r\n\tpage = initialState.page\r\n\ttotalTickets = initialState.totalTickets\r\n\r\n\tsetChangeFilterTransfer = (name) => {\r\n\t\tif (name === 'all') {\r\n\t\t\tconst checkedAll = !this.filterTransfer.find(({ label }) => label === name).check\r\n\t\t\tthis.filterTransfer.forEach((filter) => {\r\n\t\t\t\tfilter.check = checkedAll\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.filterTransfer.forEach((filter) => {\r\n\t\t\t\tif (filter.label === name) filter.check = !filter.check\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.setSelectedFilterTransfer()\r\n\t}\r\n\r\n\tsetSelectedFilterTransfer() {\r\n\t\tconst checkedAll = this.filterTransfer[0].check\r\n\t\tif (!checkedAll) {\r\n\t\t\tthis.filterTransfer = checkFilter(this.filterTransfer, checkedAll)\r\n\t\t}\r\n\t\tif (checkedAll) {\r\n\t\t\tthis.filterTransfer = checkFilter(this.filterTransfer, checkedAll)\r\n\t\t}\r\n\t}\r\n\r\n\tsetChangeFilterPrice = () => {\r\n\t\tthis.isFastOrCheap = !this.isFastOrCheap\r\n\t}\r\n\r\n\tsetSearchId = (id) => {\r\n\t\tthis.searchId = id\r\n\t}\r\n\r\n\tsetTickets = (tickets) => {\r\n\t\tif (!this.tickets || this.tickets.length === 0) {\r\n\t\t\tthis.tickets = tickets\r\n\t\t} else {\r\n\t\t\tthis.tickets = [...this.tickets, ...tickets]\r\n\t\t}\r\n\t}\r\n\r\n\tsetClearState = () => {\r\n\t\tthis.tickets = []\r\n\t}\r\n\r\n\tsetChangeLoading = (bool) => {\r\n\t\tthis.loading = bool\r\n\t}\r\n\r\n\tsetChangeError = (error) => {\r\n\t\tthis.error = error\r\n\t}\r\n\r\n\tsetTotalTickets = (total) => {\r\n\t\tthis.totalTickets = total\r\n\t}\r\n\r\n\tsetPage = () => {\r\n\t\tthis.page = this.page + 1\r\n\t}\r\n\r\n\tget filtersTickets() {\r\n\t\tif (this.tickets) {\r\n\t\t\tconst type = this.isFastOrCheap ? 'price' : 'duration'\r\n\t\t\tif (this.filterTransfer[0].check) {\r\n\t\t\t\treturn sortPriceOrTimeTickets(this.tickets, type)\r\n\t\t\t}\r\n\t\t\tconst checkedTransfer = this.filterTransfer\r\n\t\t\t\t.filter(({ label, check }) => {\r\n\t\t\t\t\tif (label === 'all') return false\r\n\t\t\t\t\treturn check\r\n\t\t\t\t})\r\n\t\t\t\t.map(({ stop }) => stop)\r\n\t\t\tconst filterTicketsTransfer = this.tickets.filter(\r\n\t\t\t\t({ segments }) =>\r\n\t\t\t\t\tcheckedTransfer.includes(segments[0].stops.length) &&\r\n\t\t\t\t\tcheckedTransfer.includes(segments[1].stops.length)\r\n\t\t\t)\r\n\t\t\treturn sortPriceOrTimeTickets(filterTicketsTransfer, type)\r\n\t\t}\r\n\t\treturn this.tickets\r\n\t}\r\n\r\n\tget visibleTickets() {\r\n\t\tif (this.filtersTickets) {\r\n\t\t\treturn this.filtersTickets.slice(0, this.perPage * this.page)\r\n\t\t}\r\n\t\treturn this.filtersTickets\r\n\t}\r\n\r\n\tget hasMore() {\r\n\t\tif (this.totalTickets) {\r\n\t\t\treturn this.totalTickets > this.perPage * this.page\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\trequest = async (initial) => {\r\n\t\ttry {\r\n\t\t\tthis.setChangeLoading(true)\r\n\t\t\tthis.setChangeError(null)\r\n\t\t\tif (initial) {\r\n\t\t\t\tthis.setClearState()\r\n\t\t\t\tawait this.requestSearchId()\r\n\t\t\t}\r\n\t\t\tawait this.requestTickets()\r\n\t\t\tthis.setChangeLoading(false)\r\n\t\t} catch (error) {\r\n\t\t\tthis.setChangeLoading(false)\r\n\t\t\tthis.setChangeError(error)\r\n\t\t}\r\n\t}\r\n\r\n\trequestSearchId = async () => {\r\n\t\tconst resId = await fetch('https://front-test.beta.aviasales.ru/search')\r\n\t\tif (resId.status !== 200) {\r\n\t\t\tthrow new Error(resId.status)\r\n\t\t}\r\n\t\tconst bodyId = await resId.json()\r\n\t\tthis.setSearchId(bodyId.searchId)\r\n\t}\r\n\r\n\trequestTickets = async () => {\r\n\t\tconst resTickets = await fetch(\r\n\t\t\t`https://front-test.beta.aviasales.ru/tickets?searchId=${this.searchId}`\r\n\t\t)\r\n\t\tif (resTickets.status !== 200) {\r\n\t\t\tthrow new Error(resTickets.status)\r\n\t\t}\r\n\t\tconst bodyTickets = await resTickets.json()\r\n\t\tthis.setTickets(bodyTickets.tickets)\r\n\t\tthis.setTotalTickets(bodyTickets.tickets.length)\r\n\t}\r\n\r\n\trequestInitialData = async () => {\r\n\t\tthis.request(true)\r\n\t}\r\n\r\n\trequestNextData = async () => {\r\n\t\tthis.request(false)\r\n\t}\r\n}\r\n\r\nStore = decorate(Store, {\r\n\tfilterTransfer: observable,\r\n\tloading: observable,\r\n\terror: observable,\r\n\tsearchId: observable,\r\n\ttickets: observable,\r\n\tisFastOrCheap: observable,\r\n\ttotalTickets: observable,\r\n\tpage: observable,\r\n\tfiltersTickets: computed,\r\n\tvisibleTickets: computed,\r\n\thasMore: computed,\r\n\tsetPage: action,\r\n\tsetChangeFilterTransfer: action,\r\n\tsetSelectedFilterTransfer: action,\r\n\tsetChangeFilterPrice: action,\r\n\tsetTotalTickets: action.bound,\r\n\tsetSearchId: action.bound,\r\n\tsetTickets: action.bound,\r\n\tsetChangeLoading: action.bound,\r\n\tsetChangeError: action.bound,\r\n\tsetClearState: action.bound,\r\n})\r\n\r\nconst store = new Store()\r\n\r\nexport default store\r\n","import React, { Suspense, lazy } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'mobx-react'\nimport store from './store'\nimport Spinner from './components/spinner'\nimport './index.scss'\n\nconst App = lazy(() => import('./components/app'))\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Suspense fallback={<Spinner />}>\n\t\t\t<App />\n\t\t</Suspense>\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}